       protocolo MACRO   ;declaramos la macro, le damos el nombre de protocolo
        mov ax,@data   ;Cargamos el segmento de datos.
        mov ds,ax
        mov dx,ax
       ENDM


       ModoVideo MACRO modo
        MOV AH, 00h
        MOV AL, modo
        INT 10h
       ENDM
   
       InicializarMouse MACRO
	MOV AX,00h 
    	INT 33h
       ENDM

       MostrarMouse MACRO
        MOV AX, 01H
        INT 33H
       ENDM
       
       PosicionMouse MACRO RENGLON,COLUMNA
	MOV AX,04h
	MOV CX,RENGLON
	MOV DX,COLUMNA
	INT 33h
       ENDM

       EstadoMouse MACRO
        MOV AX, 03h        
    	INT 33h
       ENDM

       OcultarMouse MACRO
        MOV AX, 02H
        INT 33H
       ENDM	
	

       escribe_cadena MACRO CADENA
         push DX
         PUSH AX
         lea dx,CADENA
         MOV AH,09  
         INT 21h
         POP AX
         pop DX
       ENDM
    
	
       Poner_Titulo MACRO
    	POS_CUR 3,14
    	escribe_cadena TITULO01
    	POS_CUR 4,14
    	escribe_cadena TITULO02
    	POS_CUR 5,14
    	escribe_cadena TITULO03
    	POS_CUR 6,14
    	escribe_cadena TITULO04
    	POS_CUR 7,14
    	escribe_cadena TITULO05
    	POS_CUR 8,14
    	escribe_cadena TITULO06
    	POS_CUR 9,14
    	escribe_cadena TITULO07
    	POS_CUR 10,14
    	escribe_cadena TITULO08
    	POS_CUR 13,6
    	escribe_cadena TITULO09
    	POS_CUR 14,6
    	escribe_cadena TITULO10
    	POS_CUR 15,6
    	escribe_cadena TITULO11
    	POS_CUR 16,6
    	escribe_cadena TITULO12
    	POS_CUR 17,6
    	escribe_cadena TITULO13
    	POS_CUR 18,6
    	escribe_cadena TITULO14
    	POS_CUR 19,6
    	escribe_cadena TITULO15
    	POS_CUR 20,6
    	escribe_cadena TITULO16
    
    	POS_CUR 23,30
    	escribe_cadena MENSG1
    	POS_CUR 29,32
    	escribe_cadena MENSG2
       ENDM
	
	
       HacerTabla MACRO
        POS_CUR 5,26 
	escribe_cadena TABLA01
	POS_CUR 6,26
	escribe_cadena TABLA02
	POS_CUR 7,26
	escribe_cadena TABLa03
	POS_CUR 8,26
	escribe_cadena TABLA04
	POS_CUR 9,26
	escribe_cadena TABLA05
	POS_CUR 10,26
	escribe_cadena TABLA06
	POS_CUR 11,26
	escribe_cadena TABLA07
	POS_CUR 12,26
	escribe_cadena TABLA08
	POS_CUR 13,26
	escribe_cadena TABLA09
	POS_CUR 14,26
	escribe_cadena TABLA10
	POS_CUR 15,26
	escribe_cadena TABLA11
	POS_CUR 16,26
	escribe_cadena TABLA12
	POS_CUR 17,26
	escribe_cadena TABLA13
	POS_CUR 18,26
	escribe_cadena TABLA14
	POS_CUR 19,26
	escribe_cadena TABLA15
	POS_CUR 20,26
	escribe_cadena TABLA16
	POS_CUR 21,26
	escribe_cadena TABLA17
	POS_CUR 22,26
	escribe_cadena TABLA18
	POS_CUR 23,26
	escribe_cadena TABLA19
	POS_CUR 24,26
	escribe_cadena TABLA20
	POS_CUR 25,26
	escribe_cadena TABLA21
	POS_CUR 26,26
	escribe_cadena TABLA22
	POS_CUR 27,26
	escribe_cadena TABLA23
	POS_CUR 28,26
	escribe_cadena TABLA24
       ENDM
       

       Limpiar_Variable MACRO etiqueta, n
    	LOCAL PONERCEROS
    	LEA DI,etiqueta
    	MOV CX,n

PONERCEROS:
    	MOV BYTE PTR [DI], '0'   ; Escribir ASCII '0'
    	INC DI
    	LOOP PONERCEROS
       ENDM


       MULTIPLICAR MACRO MULTCND,PRODUCTO,MULTPLR,FILA,COLUMNA,NUM
	LOCAL VECES,MULTIPLICA,INCREMENTO,CARGAR,SALTAR,IMPRIME
	Limpiar_Variable PRODUCTO 4
        MOV DIGITOS,2
        MOV CX,DIGITOS
VECES:
        PUSH CX
        MOV CX,03            
   	LEA SI,MULTCND+2   
   	LEA DI,PRODUCTO+3       
   	LEA BX,MULTPLR+1
       
   	CMP DIGITOS,2
   	JE CARGAR
   
INCREMENTO:
      	DEC DI
    	DEC BX
    
CARGAR:
    	MOV DX,BX         
    	MOV SI,DX         
    	MOV BL,[SI]       
    	AND BL,0Fh        
    	LEA SI,MULTCND+2 
    
MULTIPLICA:
   	MOV AL,[SI] 
   	AND AL,0FH              
   	MUL BL                
   	AAM                      
   	ADD AL,[DI]             
   	AAA                     
   	MOV [DI],AL             
   	DEC DI
   	ADD [DI],AH             
   	DEC SI
   	LOOP MULTIPLICA
   	DEC DIGITOS
   	POP CX
   	LOOP VECES
   
   	LEA BX, PRODUCTO+3    ; CONVIERTE A ASCII
   	MOV CX, 4

SALTAR:   
   	OR BYTE PTR [BX], 30h
   	DEC BX
   	LOOP SALTAR 
 	
   	mov bx, offset PRODUCTO+NUM
   	mov cx, 4    
	POS_CUR FILA,COLUMNA
	escribe_caracter '='
	escribe_caracter ' '

IMPRIME:
    	escribe_caracter [bx]
    	INC BX
    	LOOP IMPRIME
       ENDM


       escribe_caracter MACRO valor
    	push ax
   	push dx
    	mov dl, valor
    	MOV AH, 02  ; Caracter a desplegar almacenado en dl
    	INT 21h
    	pop ax
    	pop dx
       ENDM


       ImprimirContenido MACRO BUFFER,FILA,COLUMNA,FINAL
    	LOCAL SIGUIENTE,SALIR,NO_ESPACIO,DECREMENTAR,NO_ENTER,SKIP_LF
    	MOV CX, SI             ;Número de caracteres leídos
    	MOV SI, OFFSET BUFFER
	
    	MOV BL, FILA          
    	MOV DL, COLUMNA        
    	POS_CUR BL,DL          
    
SIGUIENTE:
    	CMP CX,0
    	JE SALIR

    	LODSB                  ;Carga siguiente carácter
    	CMP AL, 24h
    	JE SALIR

    	CMP AL, ' '            ;Hay espacio
    	JNE NO_ESPACIO

    	MOV DL, FINAL    
        POS_CUR BL,DL   
    	JMP DECREMENTAR
    
NO_ESPACIO:
    	CMP AL, 0Dh            ;Es enter
    	JNE NO_ENTER

    	INC BL                 
    	MOV DL,COLUMNA             
    	POS_CUR BL,DL          
    
    	DEC CX
    	CMP CX, 0
    	JE SALIR

    	LODSB                
    	CMP AL, 0Ah        	;Lo que acompaña al enter    
    	JE DECREMENTAR         
    	JMP NO_ENTER
    
NO_ENTER:
    	escribe_caracter AL    
    
DECREMENTAR:
    	DEC CX
    	JMP SIGUIENTE

SALIR:  
       ENDM


       LeerCadena MACRO CADENA
         PUSH DX
         PUSH AX
         LEA DX,CADENA
         MOV AH,0AH
         INT 21H
         POP AX
         POP DX
       ENDM
	

       AbrirArchivo MACRO ARCHIVO, IDENTIFICADOR
	LOCAL ESPERA
	MOV DX, OFFSET ARCHIVO
 	MOV AH, 3dh  
 	MOV AL, 02h ; MODO LECTURA/ESCRITURA
 	INT 21h
	JNC ESPERA
	JMP ESPERAR
ESPERA:
 	MOV IDENTIFICADOR,AX
       ENDM


       LeerArchivo MACRO IDENTIFICADOR,BUFFER
	MOV BX,IDENTIFICADOR
        MOV CX, 220 ;maximo de caracteres A LEER
        MOV DX, OFFSET BUFFER
        MOV AH, 3fh
 	INT 21h
       ENDM


       CierreArchivo MACRO IDENTIFICADOR
	 MOV BX, IDENTIFICADOR
	 MOV AH, 3eh
 	 INT 21h 
       ENDM


       Limpiar_Fragmento MACRO INIFILA,INICOL,FINFILA,FINCOL
        PUSH AX
    	PUSH BX
    	PUSH CX
    	PUSH DX
    	MOV AX, 0600h        
    	MOV BH, 00h          
    	MOV CH, INIFILA         ; Fila inicial = fila a limpiar
    	MOV CL, INICOL          ; Columna inicial = 0
    	MOV DH, FINFILA         ; Fila final = misma fila
    	MOV DL, FINCOL          ; Columna final = 79 (última columna)
    	INT 10h
    	POP DX
    	POP CX
    	POP BX
    	POP AX
       ENDM


       PUNTO MACRO X,Y,COLOR    
    	PUSH CX
    	MOV AH,0CH              ; Función escribir pixel
    	MOV AL,COLOR            ; Color del pixel
    	MOV BH,0                ; Página de video
    	MOV CX,X                ; Columna (coordenada X)
    	MOV DX,Y                ; Fila (coordenada Y)
    	INT 10H                 ; Interrupción de video BIOS
    	POP CX
       ENDM


       LEE MACRO
        MOV AH,01
        INT 21H
       ENDM
PUNTO_FIGURAS MACRO X,Y,COLOR           ;Dibuja un punto en la pantalla (En modo gr?fico)
    
  PUSH CX
    
      MOV AH,0CH              ;Func 0C/Int 10h
      MOV AL,COLOR    ;color 0-15
      MOV BH,0                ;pagina (0 por default en esta aplicaci?n)
      MOV CX,Y                ;Columna
      MOV DX,X                ;Fila
      INT 10H         ;Interrupt 10h Video functions
      POP CX
      
      
      ENDM 
       POS_CUR MACRO FILA, COLUMNA
        PUSH AX
        PUSH BX
        PUSH DX
        MOV AH,02
        MOV BH,0
        MOV DH,FILA
        MOV DL,COLUMNA
        INT 10h
        POP DX
        POP BX
        POP AX
       ENDM


       Limpiar_Pantalla MACRO
    	PUSH AX
    	PUSH BX
    	PUSH CX
    	PUSH DX
    	MOV AX,0600h
    	MOV BH,00h      ; Fondo negro,letra blanca
    	MOV CX,0000H
   	MOV DX,184FH
    	INT 10h
   	POP DX
    	POP CX
    	POP BX
    	POP AX
       ENDM


       ACTUALIZAR_BALA MACRO
	LOCAL CICLOCHECADO,DESACTIVAR,SIGUIENTE
    	PUSH AX
    	PUSH SI
    	PUSH CX
    
    	MOV SI,0
    	MOV CX,5
    
CICLOCHECADO:
    	CMP BALABANDERA[SI],0
    	JE SIGUIENTE
    
    	; Mover bala hacia arriba
    	DEC BALAPOSICIONX[SI]
    
    	; Verificar si salió de pantalla
    	CMP BALAPOSICIONX[SI], 5
    	JLE DESACTIVAR
    	JMP SIGUIENTE
    
DESACTIVAR:
    	MOV BALABANDERA[SI], 0
    
SIGUIENTE:
    	INC SI
    	LOOP CICLOCHECADO
    
    	POP CX
    	POP SI
    	POP AX
       ENDM


       DIBUJAR_BALA MACRO
    	LOCAL CICLODIBUJADO,SIGUINTEBALA
    	PUSH AX
    	PUSH BX
    	PUSH CX
    	PUSH DX
    	PUSH SI
    
    	MOV SI, 0
    	MOV CX, 5
    
CICLODIBUJADO:
    	CMP BALABANDERA[SI],0
    	JE SIGUIENTEBALA
    
    	POS_CUR BALAPOSICIONX[SI],BALAPOSICIONY[SI]
    	escribe_cadena DISPARO
    
SIGUIENTEBALA:
    	INC SI
    	LOOP CICLODIBUJADO
    
    	POP SI
    	POP DX
    	POP CX
    	POP BX
    	POP AX
       ENDM


       TECLA_PRESIONADA MACRO
	LOCAL SALIR,IZQUIERDA,DERECHA,DISPARO,FINTECLA
    	READKEY
    	CMP TECLA, 4Bh
    	 JE IZQUIERDA
    	CMP TECLA, 4Dh
    	 JE DERECHA
    	CMP TECLA, 39h
    	 JE DISPARO
    	CMP TECLA, 01h
    	 JE SALIR
    	JMP FINTECLA

SALIR:	
    	JMP VENTANA5

IZQUIERDA:
    	CMP POSICIONX,1
    	JLE FINTECLA
    	DEC POSICIONY
    	JMP FINTECLA

DERECHA:
    	CMP POSICIONX,78
    	JGE FINTECLA
    	INC POSICIONY
    	JMP FINTECLA

DISPARO:
    	BALA
    	JMP FINTECLA
FINTECLA:
       ENDM


       BALA MACRO
	LOCAL BUSCARBALA,DISPARARBALA,FIN
    	PUSH AX
    	PUSH SI
    
    	MOV SI,0
    	MOV CX,5
BUSCARBALA:
    	CMP BALABANDERA[SI],0
    	JE DISPARARBALA
    	INC SI
    	LOOP BUSCARBALA
    	JMP FIN        ; No hay balas disponibles
    
DISPARARBALA:
   	MOV AL, POSICIONY
    	MOV BALAPOSICIONY[SI],AL
    	MOV AL,POSICIONX
    	DEC AL
    	MOV BALAPOSICIONX[SI],AL
    	MOV BALABANDERA[SI],1

FIN:
    	POP SI
    	POP AX
       ENDM


       ACTUALIZAR_INVADERS MACRO
    	LOCAL MOVER,SIGUENTE
    	PUSH AX
    	PUSH SI
    	PUSH CX
    
    	; Mover invasores horizontalmente
    	MOV SI,0
    	MOV CX,50
    	MOV AL,DESPLAZAMIENTO
    
MOVER:
    	CMP INVADERSVIDA[SI], 0
    	JE SIGUENTE
    	ADD INVADERSY[SI], AL   ;CHECAR
    
SIGUENTE:
    	INC SI
    	LOOP MOVER
    
    	; Verificar si necesitan cambiar dirección
    	CHECAR_INVADERS
    	POP CX
    	POP SI
    	POP AX
       ENDM


       CHECAR_INVADERS MACRO
    	LOCAL CICLO, SIGUIENTE, CAMBIAR, MUEVEABAJO, SIGUIENTEABAJO
    	LOCAL CHECAR_LIMITE_INFERIOR, QUITAR_VIDA, REINICIAR_INVADERS
    	LOCAL VERIFICAR_TODOS_MUERTOS, AUMENTAR_VELOCIDAD, CHECARMUERTE
    	LOCAL FIN,SIGUES,REVIVIR

    	PUSH AX
    	PUSH BX
    	PUSH SI
    	PUSH CX

    	MOV SI,0
    	MOV CX,50

CICLO:
    	CMP INVADERSVIDA[SI],0
    	JE SIGUIENTE

    	CMP INVADERSY[SI],3
    	JLE CAMBIAR
    	CMP INVADERSY[SI],74
    	JGE CAMBIAR

SIGUIENTE:
    	INC SI
    	LOOP CICLO
    	JMP CHECAR_LIMITE_INFERIOR

CAMBIAR:
    	NEG DESPLAZAMIENTO

    	; Mover hacia abajo
    	MOV SI,0
    	MOV CX,50

MUEVEABAJO:
    	CMP INVADERSVIDA[SI],0
    	JE SIGUIENTEABAJO
    	INC INVADERSX[SI] ; bajar una fila

SIGUIENTEABAJO:
    	INC SI
    	LOOP MUEVEABAJO

CHECAR_LIMITE_INFERIOR:
    	MOV SI,0
    	MOV CX,50

CHECAR_FINAL:
    	CMP INVADERSVIDA[SI],0
    	JE CHECARSIG

    	CMP INVADERSX[SI],22
    	JGE QUITAR_VIDA

CHECARSIG:
    	INC SI
    	LOOP CHECAR_FINAL
    	JMP VERIFICAR_TODOS_MUERTOS

QUITAR_VIDA:
    	DEC VIDAS
    	CMP VIDAS,0
    	JNE SIGUES
    	JMP FIN
SIGUES:
    	ACTUALIZAR_VIDAS
    	JMP REINICIAR_INVADERS

REINICIAR_INVADERS:
    	INICIALIZAR

VERIFICAR_TODOS_MUERTOS:
    	MOV SI, 0
    	MOV CX, 50

CHECARMUERTE:
    	CMP INVADERSVIDA[SI],0
    	JNE FIN
    	INC SI
    	LOOP CHECARMUERTE

AUMENTAR_VELOCIDAD:
  	REVIVIR_INVADERS

FIN:
    	POP CX
    	POP SI
    	POP BX
    	POP AX
       ENDM

       REVIVIR_INVADERS MACRO
    	LOCAL AJUSTAR_VELOCIDAD, REVIVIR, FIN

    	PUSH AX
    	PUSH SI
    	PUSH CX
    	PUSH BX

AJUSTAR_VELOCIDAD:
    	MOV AL,DESPLAZAMIENTO
    	CMP AL,0
    	JNS VELOCIDAD_POSITIVA
    	NEG AL

VELOCIDAD_POSITIVA:
    	CMP AL, 7
    	JGE FIN          
    	INC AL             

    	MOV BL, DESPLAZAMIENTO
    	CMP BL, 0
    	JNS GUARDAR_VELOCIDAD
    	NEG AL             

GUARDAR_VELOCIDAD:
    	MOV DESPLAZAMIENTO, AL

    	INICIALIZAR
    
    	MOV SI, 0
    	MOV CX, 50

REVIVIR:
    	MOV INVADERSVIDA[SI], 1
    	INC SI
    	LOOP REVIVIR

FIN:
    	POP BX
    	POP CX
    	POP SI
    	POP AX
       ENDM


       INICIALIZAR MACRO
    	LOCAL RENGLON,COLUMNA
    	PUSH AX
    	PUSH BX
    	PUSH CX
    	PUSH DX
    
    	MOV SI,0           ; Índice
    	MOV DH,5           ; Fila inicial
    	MOV CX,5           ; 5 filas
    
RENGLON:
    	PUSH CX
    
    	MOV DL,5         ; Columna inicial
    	MOV CX,10          ; 10 columnas
    
COLUMNA:
    	MOV INVADERSY[SI],DL
    	MOV INVADERSX[SI],DH
    
    	ADD DL,4           ; Espaciado horizontal
    	INC SI
    	LOOP COLUMNA
    
    	ADD DH,2           ; Espaciado vertical
    	POP CX
    	LOOP RENGLON
    
    	POP DX
    	POP CX
    	POP BX
    	POP AX
       ENDM


       NUM_ESCALADO_ALEATORIO MACRO TAM
    	SEMILLA
    	ALEATORIO
    	ESCALANDO TAM
       ENDM
       

       SEMILLA MACRO
    	PUSH AX
    	MOV AH,2CH
    	INT 21H  ; RETORNA CH=HORAS, EN FORMATO 00-23, MEDIANOCHE=0
    	         ; CL MINUTOS 00-59
    	         ;DH SEGUNDOS 00-59
    	         ;DL CENTESIMAS DE SEGUNDO 00-99
    	POP AX
       ENDM


       ALEATORIO MACRO
   	; XN+1=(2053*XN + 13849)MOD 2**16
   	; RETORNA EL NUMERO PSEUDOALEATORIO EN AX
   	MOV AX,DX ;CARGANDO A AX EL NUMERO SEMILLA tomado de la int 21 serv             2CH
   	MOV DX,0  ;CARGANDO CERO EN LA POSICION MAS SIGNIFICATIVA DEL               MULTIPLICANDO
   	MOV BX,2053 ; MULTIPLICADOR
   	MUL BX
   	MOV BX,13849 ;CARGA EN BX LA CONSTANTE ADITIVA
   	CLC
   	ADD AX,BX ; SUMA PARTES MENOS SIGNIFICATIVAS DEL RESULTADO
   	ADC DX,0 ; SUMA EL ACARREO SI ES NECESARIO
   	MOV BX,0FFFFH ; CARGAR LA CONSTANTE 2**16-1
   	DIV BX
   	MOV AX,DX ; MUEVE EL RESIDUO  AX
       ENDM
       

       ESCALANDO MACRO TAMANO
   	; ESCALANDO EL NUMERO PSEUDOALEATORIO OBTENIDO
   	MOV DX,0
   	MOV BX,TAMANO ;NUMEROS ALEATORIOS ENTRE 0 Y 255
   	DIV BX
   	MOV AX,DX ;guarda el resultado en ax
       ENDM


       ;Pa que los invaders disparen
       INVADER_DISPARAR MACRO
    	LOCAL BUSCAR,ENCONTRAR,CREAR,FIN
    	PUSH AX
    	PUSH BX
    	PUSH CX
    	PUSH DX
    	PUSH SI
    	PUSH DI
    
    	INC CONTADORINVADER
    	CMP CONTADORINVADER,15    ; Disparar cada 30 ciclos 
    	JL FIN
    	MOV CONTADORINVADER,0   
                               ; Generar número aleatorio para seleccionar invader que dispara
    	NUM_ESCALADO_ALEATORIO 50  
    	MOV BX, AX                  
    
    	CMP INVADERSVIDA[BX],0
    	JE FIN              ; Si está inactivo, no disparar
    
    	MOV SI,0
    	MOV CX,10                  ; Máximo 10 balas de invaders
    
ENCONTRAR:
    	CMP BALAINVADERBANDERA[SI],0
    	JE CREAR
    	INC SI
    	LOOP ENCONTRAR
    	JMP FIN             ; No hay balas disponibles
    
CREAR:
    	MOV AL,INVADERSX[BX]
    	INC AL                            
    	MOV BALAINVADERPOSICIONX[SI],AL
    
    	MOV AL,INVADERSY[BX]
    	MOV BALAINVADERPOSICIONY[SI],AL
    
    	MOV BALAINVADERBANDERA[SI],1    ; Activar la bala  
FIN:
    	POP DI
    	POP SI
    	POP DX
    	POP CX
    	POP BX
    	POP AX
       ENDM


       ACTUALIZARBALA_INVADER MACRO
    	LOCAL CICLO,DESACTIVAR,SIGUIENTE
    	PUSH AX
    	PUSH SI
    	PUSH CX
    
    	MOV SI,0
    	MOV CX,10   ;BALAS MAXIMAS
    
CICLO:
    	CMP BALAINVADERBANDERA[SI],0
    	JE SIGUIENTE
    
    	; Mover bala hacia abajo
    	INC BALAINVADERPOSICIONX[SI]   
                                        ; Verificar si salió de pantalla
    	CMP BALAINVADERPOSICIONX[SI],25
    	JGE DESACTIVAR
    	JMP SIGUIENTE
    
DESACTIVAR:
    	MOV BALAINVADERBANDERA[SI],0
    
SIGUIENTE:
    	INC SI
    	LOOP CICLO
    
    	POP CX
    	POP SI
    	POP AX
       ENDM


       DIBUJARINVADER_BALA MACRO
    	LOCAL CICLO,SIGUIENTE
    	PUSH AX
    	PUSH BX
    	PUSH CX
    	PUSH DX
    	PUSH SI
    
    	MOV SI, 0
    	MOV CX, 10
    
CICLO:
    	CMP BALAINVADERBANDERA[SI],0
    	JE SIGUIENTE
    
    	POS_CUR BALAINVADERPOSICIONX[SI],BALAINVADERPOSICIONY[SI]
    	escribe_cadena DISPAROINVADER
    
SIGUIENTE:
    	INC SI
    	LOOP CICLO
    	POP SI
    	POP DX
    	POP CX
    	POP BX
    	POP AX
       ENDM

       GUARDARSCORE MACRO APODO, SCORES, IDENTIFICADOR
    	LOCAL ESCRIBIR_DATOS,CONTAR,FINAPODO,CONTAR2,FIN
    
    	MOV BX,IDENTIFICADOR
    
    	; Posicionarse al final del archivo
    	MOV AH,42h 
    	MOV AL,02h                          ; Desde el final del archivo
    	MOV CX,0
    	MOV DX,0
    	INT 21h
    
    	; Escribir salto de línea (Enter)
    	MOV AH,40h                          ;Función escribir
    	MOV BX,IDENTIFICADOR
    	MOV CX,2        
    	MOV DX,OFFSET SALTO
    	INT 21h
    
    	; Escribir el apodo
    	MOV SI,OFFSET APODO
    	MOV CX,0
CONTAR:
    	MOV AL,[SI]
    	CMP AL,'$'
    	JE FINAPODO
    	INC SI
    	INC CX
    	JMP CONTAR
FINAPODO:
    	MOV DX, OFFSET APODO
    	MOV AH,40h
    	MOV BX,IDENTIFICADOR
    	INT 21h
    
    	;Escribir un espacio
    	MOV AH,40h
    	MOV BX,IDENTIFICADOR
    	MOV CX,1
    	MOV DX,OFFSET ESPACIO
    	INT 21h
    
    	;Escribir el score
    	MOV SI,OFFSET SCORES
    	MOV CX,0
CONTAR2:
    	MOV AL,[SI]
    	CMP AL,'$'
    	JE FIN
    	INC SI
    	INC CX
    	JMP CONTAR2 
FIN:
    	MOV DX,OFFSET SCORES
    	MOV AH,40h
    	MOV BX,IDENTIFICADOR
    	INT 21h 
       ENDM
;------------------------------
       MARCADOR MACRO TIPOINVADER
    	LOCAL TIPO1,TIPO2,TIPO3,TIPO4,SUMAR, FIN,T4
    	PUSH AX
    	PUSH BX
    	PUSH CX
    
    	MOV AL,TIPOINVADER    
    	CMP AL, 1
    	JE TIPO1
    	CMP AL, 2
    	JE TIPO2
    	CMP AL, 3
    	JE T3
    	CMP AL, 4
    	JE T4
    	JMP FIN         ; Tipo no válido
T3:
    	JMP TIPO3  
T4:
    	JMP TIPO4
    
TIPO1:
    	suma PUNTOS100             
    	JMP FIN
TIPO2:
    	suma PUNTOS200              
    	JMP FIN
TIPO3:
    	suma PUNTOS300              
    	JMP FIN
TIPO4:
    	suma PUNTOS400              
FIN:
    	POP CX
    	POP BX
    	POP AX
       ENDM

       ACTUALIZAR_VIDAS MACRO
    	LOCAL CICLO

    	POS_CUR 28,2
    	escribe_cadena MENSG10

    	XOR CX,CX
    	MOV CL,VIDAS
    	MOV CONTA,0

CICLO:
    	PUSH CX
    	MOV AL,CONTA
    	MOV BL,22
    	MUL BL
    	ADD AX,86

    	MOV RENINICI,AX   
    	MOV COLINICI,448
    	MOV BX,COLINICI
    
    	MOV SIZE1,01
    	MOV COLOR,04H
    	MOV CONTAUX,0
    	CALL DNAVE

    	POP CX
    	INC CONTA
    	LOOP CICLO
    	MOV CONTA,0
       ENDM

       READKEY MACRO                   ;Equivalente de ReadKey en otros lenguajes
        MOV AH,0H      ;STDIN, direct input, no echo (Func 07/int 21h)
        INT 16h 	;Interrupt 21h DOS Funcions
        MOV TECLA,AH     
       ENDM

       SALIR_DOS MACRO
         MOV AH,4CH
         INT 21H
       ENDM
	;---------------INVADERS
IJUGGER MACRO RENINICI,COLINICI,SIZE1,COLOR,BUCLE
 LOCAL DIBORE, CONOR, PROS, DIBCUERPO, CC, BOCA
 LOCAL OJOS, PIZQ, CPIZQ, CPDER, PDERE, CDERE,CPIZ
;DIBUJA OREJAS
MOV AX, RENINICI
MOV RENINICI_ORIGINAL,AX
MOV BX, COLINICI
MOV COLINICI_ORIGINAL,BX

MOV AH,0 
MOV AL,SIZE1
MOV BL,2
MUL BL 
SUB RENINICI,AX ; SE CALCULA EL DEZPLAZAMIENTO PARA DIBUJAR EL CASO
SUB COLINICI,AX
SUB COLINICI,AX

MOV CX,2
MOV BUCLE,0 
MOV DX,0

DIBORE:

CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE
INC DX
CMP DX,1
JNE CONOR  
MOV AH,0
MOV AL,SIZE1
SUB COLINICI,AX
MOV BL,3
MUL BL
ADD RENINICI,AX
CONOR:
LOOP DIBORE 

; PROSTRO
MOV AH,0
MOV AL,SIZE1
MOV BL,2
MUL BL
SUB RENINICI,AX
MOV CX,2
PROS:
CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE
INC DX
MOV AH,0
MOV AL,SIZE1 

SUB COLINICI,AX
ADD RENINICI,AX
LOOP PROS 

;BASE CUERPO
MOV AH,0
MOV AL,SIZE1
ADD COLINICI,AX
MOV BL,3
MUL BL
SUB RENINICI,AX 
MOV CX,16
MOV DX,0

DIBCUERPO:


CUADRO_MAC  RENINICI,COLINICI,SIZE1,COLOR,BUCLE 

MOV AH,0
MOV AL,SIZE1 

SUB COLINICI,AX
ADD RENINICI,AX
INC DX

CMP DX,4
JNE CC

MOV AH,0
MOV AL,SIZE1   
SUB DX,4
ADD COLINICI,AX
MOV BL,4
MUL BL
SUB RENINICI,AX
CC: 
LOOP DIBCUERPO

;BOCA 
;BASE CUERPO
MOV AH,0
MOV AL,SIZE1
ADD RENINICI,AX 
MOV CX,2
MOV DX,0
;MOV COLOR,0FH   

BOCA:
CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE
MOV AH,0
MOV AL,SIZE1
ADD RENINICI,AX
SUB COLINICI,AX
LOOP BOCA

;OJOS

MOV AX,RENINICI_ORIGINAL
MOV RENINICI,AX
MOV BX,COLINICI_ORIGINAL
MOV COLINICI,BX
mov ah,0
MOV AL,SIZE1

SUB COLINICI,AX

MOV BL,2
MUL BL
SUB RENINICI,AX
MOV COLOR,0FH

MOV DX,0
MOV CX,2 


OJOS:

CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE
MOV AH,0
MOV AL,SIZE1
SUB COLINICI,AX 
MOV BL,3
MUL BL
ADD RENINICI,AX


LOOP OJOS
;PIZQ

MOV AX,RENINICI_ORIGINAL
MOV RENINICI,AX
MOV BX,COLINICI_ORIGINAL
MOV COLINICI,BX

mov ah,0
MOV AL,SIZE1
ADD COLINICI,AX
MOV BL,4
MUL BL
SUB RENINICI,AX
SUB COLINICI,AX
MOV COLOR,04H

MOV DX,0
MOV CX,8
PIZQ:
 
CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE 
INC DX
CMP DX,7
JNE CPIZ
MOV AH,0
MOV AL,SIZE1
ADD RENINICI,AX
SUB COLINICI,AX
CPIZ:
LOOP PIZQ

;CMP PIZ
MOV AX,RENINICI_ORIGINAL
MOV RENINICI,AX
MOV BX,COLINICI_ORIGINAL
MOV COLINICI,BX

mov ah,0
MOV AL,SIZE1
SUB COLINICI,AX
SUB RENINICI,AX
MOV BL,2
MUL BL
SUB RENINICI,AX
MOV DX,0
MOV CX,2 
CPIZQ:
CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE
LOOP CPIZQ 


;PARTE DERECHA
MOV AX,RENINICI_ORIGINAL
MOV RENINICI,AX
MOV BX,COLINICI_ORIGINAL
MOV COLINICI,BX

MOV AH,0
MOV AL,SIZE1
SUB COLINICI,AX
MOV BL,2
MUL BL 
ADD RENINICI,AX

MOV CX,2 
MOV DX,0
CPDER:
CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE
LOOP CPDER
 
MOV AX,RENINICI_ORIGINAL
MOV RENINICI,AX
MOV BX,COLINICI_ORIGINAL
MOV COLINICI,BX

mov ah,0
MOV AL,SIZE1
MOV BL,3
MUL BL
ADD RENINICI,AX
SUB COLINICI,AX

MOV DX,0
MOV CX,8


PDERE:
CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE 
INC DX
CMP DX,7
JNE CDERE
MOV AH,0
MOV AL,SIZE1
SUB RENINICI,AX
SUB COLINICI,AX
CDERE:
LOOP PDERE
ENDM

NINVADER MACRO RENINICI,COLINICI,SIZE1,COLOR,BUCLE
LOCAL DIBONI, DIBOPR, DIBBASIN, DIBIN, DIBOJOIN
    LOCAL DIBBRAIZQ, CONBRIZQNI, DIBBRADER, CONBRDERNI
    LOCAL DIBPPNIIZQ, DIBOPRPATAS

MOV AX, RENINICI
MOV RENINICI_ORIGINAL,AX
MOV BX, COLINICI
MOV COLINICI_ORIGINAL,BX


MOV AH,0
MOV AL,SIZE1
SUB COLINICI,AX
MOV BL,3
MUL BL

SUB RENINICI,AX
SUB COLINICI,AX
MOV CX,2
MOV DX,0

DIBONI:

CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE

MOV AH,0
MOV AL,SIZE1
SUB COLINICI,AX
MOV BL,6
MUL BL
ADD RENINICI,AX
LOOP DIBONI 


;PROTUBERANCIAS
MOV AH,0
MOV AL,SIZE1
ADD COLINICI,AX
MOV BL,11
MUL BL
SUB RENINICI,AX
MOV CX,2
MOV DX,0

DIBOPR:

CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE

MOV AH,0
MOV AL,SIZE1
SUB COLINICI,AX
MOV BL,4
MUL BL
ADD RENINICI,AX
LOOP DIBOPR 
;BASENORMAL INVADER  

MOV AX, RENINICI_ORIGINAL
MOV RENINICI,AX
MOV BX, COLINICI_ORIGINAL
MOV COLINICI,BX

MOV AH,0
MOV AL,SIZE1
ADD COLINICI,AX

MOV BL,3
MUL BL
SUB RENINICI,AX
SUB COLINICI,AX
MOV DX,0
MOV CX,28


DIBBASIN:
CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE
INC DX
MOV AH,0
MOV AL,SIZE1
ADD RENINICI,AX
SUB COLINICI,AX

CMP DX,7
JNE DIBIN
SUB DX,7
MOV AH,0
MOV AL,SIZE1
ADD COLINICI,AX
MOV BL,7
MUL BL
SUB RENINICI,AX
DIBIN:
LOOP DIBBASIN

;OJOS

MOV AX, RENINICI_ORIGINAL
MOV RENINICI,AX
MOV BX, COLINICI_ORIGINAL
MOV COLINICI,BX

MOV AH,0
MOV AL,SIZE1
SUB COLINICI,AX

MOV BL,2
MUL BL
SUB RENINICI,AX
MOV DX,0
MOV CX,2
MOV COLOR,0FH


DIBOJOIN:
CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE
MOV AH,0
MOV AL,SIZE1
SUB COLINICI,AX
MOV BL,4
MUL BL
ADD RENINICI,AX
LOOP DIBOJOIN

; BRAZOS
MOV AX, RENINICI_ORIGINAL
MOV RENINICI,AX
MOV BX, COLINICI_ORIGINAL
MOV COLINICI,BX

MOV AH,0
MOV AL,SIZE1
ADD COLINICI,AX
ADD COLINICI,AX
MOV BL,5
MUL BL
SUB RENINICI,AX
SUB COLINICI,AX
MOV DX,0
MOV CX,7
MOV COLOR,0DH

DIBBRAIZQ:
CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE
INC DX
CMP DX,4
JNE CONBRIZQNI
MOV AH,0
MOV AL,SIZE1
ADD RENINICI,AX
SUB COLINICI,AX
SUB COLINICI,AX
CONBRIZQNI:
LOOP DIBBRAIZQ
;BRAZO DERECHO

MOV AX, RENINICI_ORIGINAL
MOV RENINICI,AX
MOV BX, COLINICI_ORIGINAL
MOV COLINICI,BX

MOV AH,0
MOV AL,SIZE1
ADD COLINICI,AX
ADD COLINICI,AX
MOV BL,5
MUL BL
ADD RENINICI,AX
SUB COLINICI,AX
MOV DX,0
MOV CX,7
MOV COLOR,0DH

DIBBRADER:
CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE
INC DX
CMP DX,4
JNE CONBRDERNI
MOV AH,0
MOV AL,SIZE1
SUB RENINICI,AX
SUB COLINICI,AX
SUB COLINICI,AX
CONBRDERNI:
LOOP DIBBRADER

; PATITAS

MOV AH,0
MOV AL,SIZE1
MOV BL,7
MUL BL

SUB RENINICI,AX
MOV CX,2
MOV DX,0

DIBPPNIIZQ:

CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE

MOV AH,0
MOV AL,SIZE1
SUB COLINICI,AX
MOV BL,6
MUL BL
ADD RENINICI,AX
LOOP DIBPPNIIZQ


;PROTUBERANCIAS
MOV AX, RENINICI_ORIGINAL
MOV RENINICI,AX
MOV BX, COLINICI_ORIGINAL
MOV COLINICI,BX

MOV AH,0
MOV AL,SIZE1
SUB COLINICI,AX
MOV BL,4
MUL BL
SUB RENINICI,AX
ADD COLINICI,AX
MOV CX,2
MOV DX,0

DIBOPRPATAS:

CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE

MOV AH,0
MOV AL,SIZE1
SUB COLINICI,AX
MOV BL,8
MUL BL
ADD RENINICI,AX
LOOP DIBOPRPATAS 
ENDM

    KRABBYINV MACRO RENINICI,COLINICI,SIZE1,COLOR,BUCLE
     LOCAL DIBORKR, DIBOPKR, DIBBASEKR, CONTBKR
    LOCAL DIBBIZQKR, BIZQKR, DIBBIDERKR, BIDERKR
    LOCAL DIBCOMILLOS, PCOLMILLOS, CONTCOLMILLOSKR, DIBOJOSKR

    MOV AX, RENINICI
    MOV RENINICI_ORIGINAL,AX
    MOV BX, COLINICI
    MOV COLINICI_ORIGINAL,BX

    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    MOV BL,3
    MUL BL
    SUB RENINICI,AX
    SUB COLINICI,AX
    MOV CX,2
    MOV DX,0
    
    DIBORKR:
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    MOV BL,6
    MUL BL
    ADD RENINICI,AX
    LOOP DIBORKR
    ;PROTUBERANCIAS
    
    MOV AX,RENINICI_ORIGINAL
    MOV RENINICI,AX
    MOV BX,COLINICI_ORIGINAL
    MOV COLINICI,BX
    
    MOV AH,0
    MOV AL,SIZE1
    ADD RENINICI,AX
    MOV BL,3
    MUL BL
    SUB RENINICI,AX
    SUB COLINICI,AX
    MOV CX,2
    MOV DX,0
    
    DIBOPKR:
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    MOV BL,4
    MUL BL
    ADD RENINICI,AX
    LOOP DIBOPKR
    ;BASECOMPLETA
    
    MOV AX,RENINICI_ORIGINAL
    MOV RENINICI,AX
    MOV BX,COLINICI_ORIGINAL
    MOV COLINICI,BX
    
    MOV AH,0
    MOV AL,SIZE1
    ADD COLINICI,AX
    MOV BL,3
    MUL BL
    SUB RENINICI,AX
    SUB COLINICI,AX
    MOV CX,28
    MOV DX,0
    
    DIBBASEKR:
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE
    INC DX
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    ADD RENINICI,AX
    CMP DX ,7
    JNE CONTBKR
    SUB DX,7
    MOV AH,0
    MOV AL,SIZE1
    ADD COLINICI,AX
    MOV BL,7
    MUL BL
    SUB RENINICI,AX
    
    CONTBKR:
    LOOP DIBBASEKR
    
    ;BRAZOS
    MOV AX,RENINICI_ORIGINAL
    MOV RENINICI,AX
    MOV BX,COLINICI_ORIGINAL
    MOV COLINICI,BX
    
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    MOV BL,4
    MUL BL
    SUB RENINICI,AX
    MOV CX,5
    MOV DX,0
    
    DIBBIZQKR:
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE
    INC DX
    CMP DX ,2
    JNE BIZQKR
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    SUB RENINICI,AX
    
    BIZQKR:
    LOOP DIBBIZQKR
    ;BRAZO DER
    
    MOV AX,RENINICI_ORIGINAL
    MOV RENINICI,AX
    MOV BX,COLINICI_ORIGINAL
    MOV COLINICI,BX
    
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    MOV BL,4
    MUL BL
    ADD RENINICI,AX
    MOV CX,5
    MOV DX,0
    
    DIBBIDERKR:
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE
    INC DX
    CMP DX ,2
    JNE BIDERKR
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    ADD RENINICI,AX
    
    BIDERKR:
    LOOP DIBBIDERKR
    
    ;COLIMILLOS
    
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    MOV BL,8
    MUL BL
    SUB RENINICI,AX
    MOV CX,2
    MOV DX,0
    
    DIBCOMILLOS:
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    MOV BL,6
    MUL BL
    ADD RENINICI,AX
    LOOP DIBCOMILLOS
    
    ;PCOLIMILLOS
    MOV AX,RENINICI_ORIGINAL
    MOV RENINICI,AX
    MOV BX,COLINICI_ORIGINAL
    MOV COLINICI,BX
    
    MOV AH,0
    MOV AL,SIZE1
    ADD RENINICI,AX
    
    MOV BL,3
    MUL BL
    ADD COLINICI,AX
    SUB RENINICI,AX
    MOV CX,4
    MOV DX,0
    
    PCOLMILLOS:
    INC DX
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    ADD RENINICI,AX
    
    CMP DX,2
    JNE CONTCOLMILLOSKR
    ADD RENINICI,AX
    JNE CONTCOLMILLOSKR
    
    CONTCOLMILLOSKR:
    LOOP PCOLMILLOS
    ;OJOS KRABBY
    MOV AX,RENINICI_ORIGINAL
    MOV RENINICI,AX
    MOV BX,COLINICI_ORIGINAL
    MOV COLINICI,BX
    
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    MOV BL,2
    MUL BL
    SUB RENINICI,AX
    MOV CX,2
    MOV DX,0
    MOV COLOR,0FH
    DIBOJOSKR:
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    MOV BL,4
    MUL BL
    ADD RENINICI,AX
    LOOP DIBOJOSKR
    MOV COLOR,0AH
    ENDM

    INVOCTOPUS MACRO RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE
 LOCAL DIBPULPO, CONTPULPO
    LOCAL DIBOCTI, OCTI
    LOCAL DIBPALTEN, PALTEN
    LOCAL DIBPARTMEDOC, PAMEDOC
    LOCAL DIBOJOSOCT, CONTOJOSOCT
    LOCAL DIBPBAJAOCT, PBAJAOCT
    MOV COLOR,0CH
    MOV AX, RENINICI
    MOV RENINICI_ORIGINAL,AX
    MOV BX,COLINICI
    MOV COLINICI_ORIGINAL,BX
    
    MOV AH,0
    MOV AL,SIZE1
    SUB RENINICI,AX
    SUB RENINICI,AX
    MOV BL,4
    MUL BL
    
    SUB COLINICI,AX
    MOV CX,14
    MOV DX,0
    
    DIBPULPO:
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE
    INC DX
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    ADD RENINICI,AX
    CMP DX,4
    JNE CONTPULPO
    ADD COLINICI,AX
    MOV BL,7
    MUL BL
    SUB RENINICI,AX
    CONTPULPO:
    LOOP  DIBPULPO
    ;PROTUBERANCIAS
    
    MOV AX, RENINICI_ORIGINAL
    MOV RENINICI,AX
    MOV BX, COLINICI_ORIGINAL
    MOV COLINICI,BX
    
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    SUB COLINICI,AX
    MOV BL,6
    MUL BL
    SUB RENINICI,AX
    MOV DX,0
    MOV CX,36
    
    DIBOCTI:
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE
    INC DX
    
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    ADD RENINICI,AX
    CMP DX,12
    JNE OCTI
    SUB DX,12
    ADD COLINICI,AX
    MOV BL,12
    MUL BL
    SUB RENINICI,AX
    OCTI:
    LOOP DIBOCTI
    ;TENTACULOS_OP
    MOV AH,0
    MOV AL,SIZE1
    MOV BL,3
    MUL BL
    ADD RENINICI,AX
    MOV CX,4
    MOV DX,0
    
    DIBPALTEN:
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE ;X,Y,TAMA,COLOR,BUCLE
    INC DX
    MOV AH,0
    MOV AL,SIZE1
    ADD RENINICI,AX
    SUB COLINICI,AX
    CMP DX,2
    JNE PALTEN
    MOV AH,0
    MOV AL,SIZE1
    MOV BL,2
    MUL BL
    ADD RENINICI,AX
    PALTEN:
    LOOP DIBPALTEN
    ;PARTEMEDIA_TENTACULOS
    MOV AX, RENINICI_ORIGINAL
    MOV RENINICI,AX
    MOV BX, COLINICI_ORIGINAL
    MOV COLINICI,BX
    
    
    MOV AH,0
    MOV AL,SIZE1
    ADD COLINICI,AX
    ADD COLINICI,AX
    MOV BL,4
    MUL BL
    SUB RENINICI,AX
    MOV CX,6
    MOV DX,0
    
    DIBPARTMEDOC:
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE
    INC DX
    
    MOV AH,0
    MOV AL,SIZE1
    ADD RENINICI,AX
    SUB COLINICI,AX
    CMP DX,2
    JNE PAMEDOC
    SUB DX,2
    MOV AH,0
    MOV AL,SIZE1
    ADD RENINICI,AX
    PAMEDOC:
    LOOP DIBPARTMEDOC
    
    ;OJOS
    
    MOV AX, RENINICI_ORIGINAL
    MOV RENINICI,AX
    MOV BX, COLINICI_ORIGINAL
    MOV COLINICI,BX
    
    MOV COLOR,0FH ;COLOR OJOS
    MOV AH,0
    MOV AL,SIZE1
    ADD COLINICI,AX
    MOV BL,3
    MUL BL
        
    SUB RENINICI,AX
    SUB COLINICI,AX
    MOV CX,4
    MOV DX,0
    
    DIBOJOSOCT:
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE
    INC DX
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    ADD RENINICI,AX
    
    CMP DX,2
    JNE CONTOJOSOCT
    MOV AH,0
    MOV AL,SIZE1
    ADD RENINICI,AX
    ADD RENINICI,AX
    CONTOJOSOCT:
    LOOP DIBOJOSOCT
    ;PBAJATENTA
    MOV COLOR,0CH;COLOR ORIGINAL
    MOV AX, RENINICI_ORIGINAL
    MOV RENINICI,AX
    MOV BX, COLINICI_ORIGINAL
    MOV COLINICI,BX
    MOV AH,0
    MOV AL,SIZE1
    MOV BL,3
    MUL BL
    ADD COLINICI,AX   
    SUB RENINICI,AX
    SUB RENINICI,AX
    MOV CX,4
    MOV DX,0
    
    DIBPBAJAOCT:
    CUADRO_MAC RENINICI,COLINICI,SIZE1,COLOR,BUCLE
    INC DX
    MOV AH,0
    MOV AL,SIZE1
    SUB COLINICI,AX
    ADD RENINICI,AX
    
    CMP DX,2
    JNE PBAJAOCT
    MOV AH,0
    MOV AL,SIZE1
    MOV BL,8
    MUL BL
    ADD RENINICI,AX
    PBAJAOCT:
    LOOP DIBPBAJAOCT
    ENDM 





